@inject IAdminService AdminService

@if (!String.IsNullOrWhiteSpace(Alert)) @*kollar om alertproperty innehåller nåt, om den gör det display error*@
{
    <div class="d-flex m-3">
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>@Alert</strong>
            <button type="button" @onclick="CloseAlert" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    </div>
}

@if (Navigation == PageType.Create)
{
    <ChangeFilmGenres Page="@Navigation" OnChange="OnChange"></ChangeFilmGenres>
}

@if (Navigation == PageType.Edit || Navigation == PageType.Delete)
{
    <ChangeFilmGenres Page="@Navigation" OnChange="OnChange" Model="FilmGenre"></ChangeFilmGenres>
}

@*Home, Index, Create-buttons*@
<div class="d-flex me-1">
    <a href="/" class="btn btn-outline-secondary rounded-0 me-1">Home</a>
    <button type="button" class="btn btn-outline-primary rounded-0 me-1" @onclick="()=>ChangePageType(PageType.Index)">Index</button>
    <button type="button" class="btn btn-outline-success rounded-0" @onclick="()=>ChangePageType(PageType.Create)">Create</button>
</div>

<FilmGenresIndex OnClick="OnClick" Model="Model"></FilmGenresIndex>

@code {
    public string Alert { get; set; } = string.Empty;
    public string Navigation { get; set; } = PageType.Index;
    public List<FilmGenreDTO> Model { get; set; } = new();
    public FilmGenreDTO FilmGenre { get; set; } = new();

    public void ChangePageType(string pageType)
    {
        Navigation = pageType;
    }

    public void CloseAlert()
    {
        Alert = string.Empty;
    }

    async Task OnClick(RefClickModel<FilmGenreDTO> model)
    {
        if (model.pageType.Equals(PageType.Edit) || model.pageType.Equals(PageType.Delete))
        {
            FilmGenre = model.dto ?? new();
        }
        ChangePageType(model.pageType);
    }

    async Task OnChange(string alert)
    {
        try
        {
            Alert = alert;
            ChangePageType(PageType.Index);
            Model = await AdminService.GetAsync<FilmGenreDTO>("FilmGenres");

        }
        catch
        {
            Alert = "error";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Alert = "";
        Model = await AdminService.GetAsync<FilmGenreDTO>("FilmGenres");
    }
}
