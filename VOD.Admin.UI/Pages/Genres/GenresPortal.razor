@inject IAdminService AdminService

@if (!String.IsNullOrWhiteSpace(Alert)) @*kollar om alertproperty innehåller nåt, om den gör det display error*@
{
        <div class="d-flex m-3">
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <strong>@Alert</strong>
                <button type="button" @onclick="CloseAlert" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        </div>
}

@if (Navigation == PageType.Create)
{
	<ChangeGenres Page="@Navigation" OnChange="OnChange"></ChangeGenres>
}

@if (Navigation == PageType.Edit || Navigation == PageType.Delete)
{
	<ChangeGenres Page="@Navigation" OnChange="OnChange" Model="Genre"></ChangeGenres>
}


@*Home, Index, Create-buttons*@
<div class="d-flex me-1">
    <a href="/" class="btn btn-outline-secondary rounded-0 me-1 btn-lg">Home</a>
    <button type="button" class="btn btn-outline-primary rounded-0 me-1 btn-lg" @onclick="()=>ChangePageType(PageType.Index)">Index</button>
    <button type="button" class="btn btn-outline-success rounded-0 btn-lg" @onclick="()=>ChangePageType(PageType.Create)">Create</button>
</div>

<GenresIndex OnClick="OnClick" Model="Model"></GenresIndex>

@code {
    public List<GenreDTO> Model { get; set; } = new();
    public string Alert { get; set; } = string.Empty;
    public string Navigation { get; set; } = PageType.Index;
    public GenreDTO Genre { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Alert = string.Empty;
        Model = await AdminService.GetAsync<GenreDTO>("Genres");
    }

    public void ChangePageType(string pageType)
    {
        Navigation = pageType;
    }
    public void CloseAlert()
    {
        Alert = string.Empty;
    }
    async Task OnClick(ClickModel model)
    {
        if (model.pageType.Equals(PageType.Edit) || model.pageType.Equals(PageType.Delete))
        {
            Genre = await AdminService.SingleAsync<GenreDTO>($"Genres/{model.id}") ?? new();
        }
        ChangePageType(model.pageType);
    }

    async Task OnChange(string alert)
    {
        try
        {
            Alert = alert;
            Model = await AdminService.GetAsync<GenreDTO>("Genres");
            ChangePageType(PageType.Index);
        }
        catch
        {
            Alert = "error";
        }
    }
}
